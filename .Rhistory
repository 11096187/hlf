status = FALSE
}
else
{
i = i + 1
}
}
ct = ct + (i-1)
}
if(ct == 5)
{
flota[1] = flota[1] + 1
}
else if(ct == 4)
{
flota[2] = flota[2] + 1
}
else if(ct == 3)
{
flota[3] = flota[3] + 1
}
else if(ct == 2)
{
flota[4] = flota[4] + 1
}
else if(ct == 1)
{
flota[5] = flota[5] + 1
}
else
{
flota[1] = 999
}
}
}
}
flota[1] = flota[1] / 5
flota[2] = flota[2] / 4
flota[3] = flota[3] / 3
flota[4] = flota[4] / 2
flota[5] = flota[5] / 1
if(flota[1] != 1 || flota[2] != 2 || flota[3] != 2 || flota[4] != 3 || flota[5] != 4)
{
flota[1] = 999
}
return(flota)
}
gameFinished <- function(table)
{
valid = TRUE
for (x in 1:10)
{
for (y in 1:10)
{
if (table[x,y] == "H" || table[x,y] == "x")
{
valid = FALSE
}
}
}
return(valid)
}
getPosition<-function(input)
{
valid = TRUE
#SEPARATES INPUT INTO ELEMENTS
if (nchar(input) == 4)
{
char1 <- as.integer(substr(input, 1, 1))
char2 <- substr(input, 2, 2)
char3 <- substr(input, 3, 3)
char4 <- as.integer(substr(input, 4, 4))
}
else if (nchar(input) == 5)
{
char1 <- as.integer(substr(input, 1, 2))
char2 <- substr(input, 3, 3)
char3 <- substr(input, 4, 4)
char4 <- as.integer(substr(input, 5, 5))
}
else
{
valid = FALSE
}
if(valid)
{
if(!is.na(char1) && !is.na(char2) && !is.na(char3) && !is.na(char4))
{
if(char1 >= 1 && char1 <= 10)
{
#VALID ROW
columns = c("A","B","C","D","E","F","G","H","I","J")
letter = 1
found = FALSE
while(letter <= 10 && !found)
{
if(char2 == columns[letter])
{
found = TRUE
}
else
{
letter = letter + 1
}
}
if(letter <= 10)
{
#VALID ROW AND VALID COLUMN
if(char3 == "H" || char3 == "V")
{
#VALID ROW, COLUMN AND DIRECTION
if(char4 < 1 || char4 > 5)
{
valid = FALSE
}
}
else
{
valid = FALSE
}
}
else
{
valid = FALSE
}
}
else
{
valid = FALSE
}
}
else
{
valid = FALSE
}
}
if(!valid)
{
result = c(0,0,0,0)
}
else
{
result = c(char1,letter,char3,char4)
}
return(result)
}
noOverlap<-function(table,position)
{
valid = TRUE
table = cbind(table,c("b","b","b","b","b","b","b","b","b","b"))
table = cbind(c("b","b","b","b","b","b","b","b","b","b"),table)
table = rbind(table,c("b","b","b","b","b","b","b","b","b","b","b","b"))
table = rbind(c("b","b","b","b","b","b","b","b","b","b","b","b"),table)
rownames(table) = 1:12
colnames(table) = 1:12
if(position[3] == "H")
{
x = (as.integer(position[1])+1)
for(y in (as.integer(position[2])+1):(as.integer(position[2])+as.integer(position[4])))
{
if(table[x,y] != "b" || table[(x+1),y] != "b" || table[(x-1),y] != "b")
{
valid = FALSE
}
}
if(valid)
{
y = (as.integer(position[2])+1)
length = as.integer(position[4])
if(table[x,(y-1)] != "b" || table[x,(y+length)] != "b")
{
valid = FALSE
}
}
}
else
{
y = (as.integer(position[2])+1)
for(x in (as.integer(position[1])+1):(as.integer(position[1])+as.integer(position[4])))
{
if(table[x,y] != "b" || table[x,(y+1)] != "b" || table[x,(y-1)] != "b")
{
valid = FALSE
}
}
if(valid)
{
x = (as.integer(position[1])+1)
length = as.integer(position[4])
if(table[(x-1),y] != "b" || table[(x+length),y] != "b")
{
valid = FALSE
}
}
}
return(valid)
}
option1 <- function() {
if ("readxl" %in% rownames(installed.packages()) == FALSE)
{
install.packages("readxl")
}
if ("readr" %in% rownames(installed.packages()) == FALSE)
{
install.packages("readr")
}
library(readxl)
library(readr)
file = read_excel(file.choose(), skip=1,col_names=c("A","B","C","D","E","F","G","H","I","J"))
fBoat <- names(file)
file <- unlist(file, use.name = FALSE)
file <- c(fBoat, file)
valid = TRUE
l = 11
if(length(file) == 110)
{
tablero <- matrix(c(1:100), nrow = 10, ncol = 10)
for (i in 1:10)
{
for (j in 1:10)
{
tablero[j, i] <- file[l]
l = l + 1
}
}
}
else
{
valid = FALSE
}
if(!validateEntireTable(tablero))
{
valid = FALSE
print("ERROR: Boats intersect each other. You will be redirected to the menu...")
}
else
{
flota = countFlota(tablero)
if(flota[1] > 1)
{
valid = FALSE
print("ERROR: Boat sizes do not fit requirements. You will be redirected to the menu...")
}
}
if (valid) {
# SINGLE PLAYER
print("Board successfully loaded.")
mostrarTablero(tablero)
singlePlayer(tablero)
}
}
option2 <- function() {
continueInOption2 = TRUE
tablero1 <- matrix(c(1:100), nrow = 10, ncol = 10)
tablero2 <- matrix(c(1:100), nrow = 10, ncol = 10)
for (i in 1:10)
{
for (j in 1:10)
{
tablero1[i, j] <- "b"
tablero2[i, j] <- "b"
}
}
# Los vectores "flota1" y "flota2": 1 barco de 5 casillas, 2 barcos de 4 casillas, 2 barcos de 3 casillas, 3 barcos de 2 casillas, 4 barcos de 1 casilla -> comineza c(0,0,0,0,0) y luego va contando cu??ntos barcos se ingresaron
flota1 <- c(0, 0, 0, 0, 0)
flota2 <- c(0, 0, 0, 0, 0)
mostrarTablero(tablero1)
## PLAYER 1
while ((flota1[1] < 1 || flota1[2] < 2 || flota1[3] < 2 || flota1[4] < 3 || flota1[5] < 4) && continueInOption2)
{
cat("\nYou have the following boats available:",
"\n5 squares: ", (1 - flota1[1]),
"\n4 squares: ", (2 - flota1[2]),
"\n3 squares: ", (2 - flota1[3]),
"\n2 squares: ", (3 - flota1[4]),
"\n1 square:  ", (4 - flota1[5]), "\n\n")
print("Player 1: please enter the position of a ship (eg. 1AV3):")
input <- userInput()
validInput = TRUE
position = getPosition(input)
if(position[1] == 0)
{
validInput = FALSE
if(input != "R")
{
print("Make sure the format of the input is correct and try again:")
}
}
else if((position[4] == 5 && flota1[1] == 1) || (position[4] == 4 && flota1[2] == 2) || (position[4] == 3 && flota1[3] == 2) || (position[4] == 2 && flota1[4] == 3) || (position[4] == 1 && flota1[5] == 4))
{
validInput = FALSE
print("Boat size is not available. Please enter an available boat size:")
}
else
{
varValid = TRUE
if(position[3] == "H")
{
if((as.integer(position[2])+as.integer(position[4])) > 11)
{
varValid = FALSE
validInput = FALSE
print("The boat you entered does not fit in the board. Please enter a new one:")
}
}
else if(position[3] == "V")
{
if((as.integer(position[1])+as.integer(position[4])) > 11)
{
varValid = FALSE
validInput = FALSE
print("The boat you entered does not fit in the board. Please enter a new one:")
}
}
if(varValid)
{
if(!noOverlap(tablero1,position))
{
validInput = FALSE
print("Oops, the boats are not allowed to touch or overlap! Please choose another position:")
}
}
}
while(!validInput && input != "R")
{
input <- userInput()
validInput = TRUE
position = getPosition(input)
if(position[1] == 0)
{
validInput = FALSE
if(input != "R")
{
print("Make sure the format of the input is correct and try again:")
}
}
else if((position[4] == 5 && flota1[1] == 1) || (position[4] == 4 && flota1[2] == 2) || (position[4] == 3 && flota1[3] == 2) || (position[4] == 2 && flota1[4] == 3) || (position[4] == 1 && flota1[5] == 4))
{
validInput = FALSE
print("Boat size is not available. Please enter an available boat size:")
}
else
{
varValid = TRUE
if(position[3] == "H")
{
if((as.integer(position[2])+as.integer(position[4])) > 11)
{
varValid = FALSE
validInput = FALSE
print("The boat you entered does not fit in the board. Please enter a new one:")
}
}
else if(position[3] == "V")
{
if((as.integer(position[1])+as.integer(position[4])) > 11)
{
varValid = FALSE
validInput = FALSE
print("The boat you entered does not fit in the board. Please enter a new one:")
}
}
if(varValid)
{
if(!noOverlap(tablero1,position))
{
validInput = FALSE
print("Oops, the boats are not allowed to touch or overlap! Please choose another position:")
}
}
}
}
if(input != "R")
{
tablero1 <- actualizarTablero(input, tablero1)
flota1 <- actualizarFlota(input, flota1)
mostrarTablero(tablero1)
}
else
{
continueInOption2 = FALSE
}
}
if(input != "R")
{
## PLAYER 2
while ((flota2[1] < 1 || flota2[2] < 2 || flota2[3] < 2 || flota2[4] < 3 || flota2[5] < 4) && continueInOption2)
{
cat("\nYou have the following boats available:",
"\n5 squares: ", (1 - flota2[1]),
"\n4 squares: ", (2 - flota2[2]),
"\n3 squares: ", (2 - flota2[3]),
"\n2 squares: ", (3 - flota2[4]),
"\n1 square:  ", (4 - flota2[5]), "\n\n")
print("Player 2: please enter the position of a ship (eg. 1AV3):")
input <- userInput()
validInput = TRUE
position = getPosition(input)
if(position[1] == 0)
{
validInput = FALSE
if(input != "R")
{
print("Make sure the format of the input is correct and try again:")
}
}
else if((position[4] == 5 && flota2[1] == 1) || (position[4] == 4 && flota2[2] == 2) || (position[4] == 3 && flota2[3] == 2) || (position[4] == 2 && flota2[4] == 3) || (position[4] == 1 && flota2[5] == 4))
{
validInput = FALSE
print("Boat size is not available. Please enter an available boat size:")
}
else
{
varValid = TRUE
if(position[3] == "H")
{
if((as.integer(position[2])+as.integer(position[4])) > 11)
{
varValid = FALSE
validInput = FALSE
print("The boat you entered does not fit in the board. Please enter a new one:")
}
}
else if(position[3] == "V")
{
if((as.integer(position[1])+as.integer(position[4])) > 11)
{
varValid = FALSE
validInput = FALSE
print("The boat you entered does not fit in the board. Please enter a new one:")
}
}
if(varValid)
{
if(!noOverlap(tablero2,position))
{
validInput = FALSE
print("Oops, the boats are not allowed to touch or overlap! Please choose another position:")
}
}
}
while(!validInput && input != "R")
{
input <- userInput()
validInput = TRUE
position = getPosition(input)
if(position[1] == 0)
{
validInput = FALSE
if(input != "R")
{
print("Make sure the format of the input is correct and try again:")
}
}
else if((position[4] == 5 && flota2[1] == 1) || (position[4] == 4 && flota2[2] == 2) || (position[4] == 3 && flota2[3] == 2) || (position[4] == 2 && flota2[4] == 3) || (position[4] == 1 && flota2[5] == 4))
{
validInput = FALSE
print("Boat size is not available. Please enter an available boat size:")
}
else
{
varValid = TRUE
if(position[3] == "H")
{
if((as.integer(position[2])+as.integer(position[4])) > 11)
{
varValid = FALSE
validInput = FALSE
print("The boat you entered does not fit in the board. Please enter a new one:")
}
}
else if(position[3] == "V")
{
if((as.integer(position[1])+as.integer(position[4])) > 11)
{
varValid = FALSE
validInput = FALSE
print("The boat you entered does not fit in the board. Please enter a new one:")
}
}
if(varValid)
{
if(!noOverlap(tablero2,position))
{
validInput = FALSE
print("Oops, the boats are not allowed to touch or overlap! Please choose another position:")
}
}
}
}
if(input != "R")
{
tablero2 <- actualizarTablero(input, tablero2)
flota2 <- actualizarFlota(input, flota2)
mostrarTablero(tablero2)
}
else
{
continueInOption2 = FALSE
}
}
}
if(input != "R")
{
plays1(tablero1, tablero2)
}
}
option3 <- function()
{
print("You're in option 3")
}
menu() # Calls the main menu
